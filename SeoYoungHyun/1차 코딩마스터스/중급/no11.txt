import heapq
import sys

n = int(sys.stdin.readline())

grid = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]

heap = [(grid[0][0], 0, 0)]

dist = [[float('inf')] * n for _ in range(n)]
dist[0][0] = grid[0][0]

directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]

while heap:
    current_tteok, x, y = heapq.heappop(heap)
    
    for dx, dy in directions:
        nx, ny = x + dx, y + dy
        
        if 0 <= nx < n and 0 <= ny < n:
            new_tteok = current_tteok + grid[nx][ny]
            
            if new_tteok < dist[nx][ny]:
                dist[nx][ny] = new_tteok
                heapq.heappush(heap, (new_tteok, nx, ny))

print(dist[n-1][n-1])
