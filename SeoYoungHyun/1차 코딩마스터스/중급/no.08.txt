import sys 
def my_def(N, coins):
    dp = []
    for i in range(N):
        dp.append([0] * N)
    
    dp[0][0] = coins[0][0]
    
    for i in range(1, N):
        for j in range(i + 1):
            if j == 0:
                dp[i][j] = dp[i - 1][j] + coins[i][j]
            elif j == i:
                dp[i][j] = dp[i - 1][j - 1] + coins[i][j]
            else:
                dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j]) + coins[i][j]
    
    return max(dp[N - 1])

N = int(input())

coins = []
for _ in range(N):
    row = list(map(int, input().split()))
    coins.append(row)
    
result = my_def(N, coins)
print(result)
